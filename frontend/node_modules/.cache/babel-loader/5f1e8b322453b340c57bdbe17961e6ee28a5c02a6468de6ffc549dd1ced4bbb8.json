{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naman\\\\Downloads\\\\PassGod\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { Constants } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(Constants.tokenKey));\n  const [loading, setLoading] = useState(true);\n  const API_URL = Constants.apiBaseUrl;\n  const loadUser = async () => {\n    if (!token) {\n      setUser(null);\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.get(`${API_URL}/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.error('Failed to load user:', error);\n      setUser(null);\n      setToken(null);\n      localStorage.removeItem(Constants.tokenKey);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadUser();\n  }, [token, loadUser]); // Added loadUser to dependencies\n\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_URL}/auth/token`, new URLSearchParams({\n        username: email,\n        password: password\n      }).toString(), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem(Constants.tokenKey, access_token);\n      setToken(access_token);\n      await loadUser(); // Load user after successful login\n      return Promise.resolve();\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Login failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setLoading(false);\n      setUser(null);\n      setToken(null);\n      localStorage.removeItem(Constants.tokenKey);\n      return Promise.reject(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Login failed');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem(Constants.tokenKey);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      login,\n      logout,\n      loadUser,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ZRwkX6rop9YTZdqP2Es+FKepTS8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within AuthProvider');\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","Constants","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","tokenKey","loading","setLoading","API_URL","apiBaseUrl","loadUser","response","get","headers","Authorization","data","error","console","removeItem","login","email","password","post","URLSearchParams","username","toString","access_token","setItem","Promise","resolve","_error$response","_error$response2","_error$response2$data","message","reject","detail","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/naman/Downloads/PassGod/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants } from '../utils/constants';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  full_name: string;\r\n  is_active: boolean;\r\n  is_verified: boolean;\r\n  is_admin: boolean;\r\n  created_at: string;\r\n  updated_at?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  loadUser: () => Promise<void>;\r\n  setUser: (user: User | null) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(localStorage.getItem(Constants.tokenKey));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const API_URL = Constants.apiBaseUrl;\r\n\r\n  const loadUser = async () => {\r\n    if (!token) {\r\n      setUser(null);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.get(`${API_URL}/auth/me`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setUser(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to load user:', error);\r\n      setUser(null);\r\n      setToken(null);\r\n      localStorage.removeItem(Constants.tokenKey);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, [token, loadUser]); // Added loadUser to dependencies\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/token`, \r\n        new URLSearchParams({\r\n          username: email,\r\n          password: password,\r\n        }).toString(),\r\n        {\r\n          headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n        }\r\n      );\r\n      const { access_token } = response.data;\r\n      localStorage.setItem(Constants.tokenKey, access_token);\r\n      setToken(access_token);\r\n      await loadUser(); // Load user after successful login\r\n      return Promise.resolve();\r\n    } catch (error: any) {\r\n      console.error('Login failed:', error.response?.data || error.message);\r\n      setLoading(false);\r\n      setUser(null);\r\n      setToken(null);\r\n      localStorage.removeItem(Constants.tokenKey);\r\n      return Promise.reject(error.response?.data?.detail || 'Login failed');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem(Constants.tokenKey);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, loading, login, logout, loadUser, setUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth must be used within AuthProvider');\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}