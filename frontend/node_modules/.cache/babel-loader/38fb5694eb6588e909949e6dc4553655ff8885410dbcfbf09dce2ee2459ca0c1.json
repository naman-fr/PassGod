{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport const api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const checkPasswordsForBreach = () => {\n  const token = localStorage.getItem('token');\n  return api.post('/api/v1/breach/check-passwords', {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const checkEmailForBreach = () => {\n  const token = localStorage.getItem('token');\n  return api.post('/api/v1/breach/check-email', {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const getBreachAlerts = () => {\n  const token = localStorage.getItem('token');\n  return api.get('/api/v1/breach/alerts', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const resolveBreachAlert = alertId => {\n  const token = localStorage.getItem('token');\n  return api.put(`/api/v1/breach/alerts/${alertId}/resolve`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","checkPasswordsForBreach","post","checkEmailForBreach","getBreachAlerts","get","resolveBreachAlert","alertId","put"],"sources":["C:/Users/naman/Downloads/PassGod/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { User, Password, SocialAccount, BreachAlert, SecureNote, SharedSecret, UserLogin, UserRegister, Token, UserUpdate, UserPasswordUpdate } from '../types';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nexport const api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to add the auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor to handle common errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const checkPasswordsForBreach = () => {\r\n  const token = localStorage.getItem('token');\r\n  return api.post<BreachAlert[]>('/api/v1/breach/check-passwords', {}, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const checkEmailForBreach = () => {\r\n  const token = localStorage.getItem('token');\r\n  return api.post<BreachAlert[]>('/api/v1/breach/check-email', {}, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const getBreachAlerts = () => {\r\n  const token = localStorage.getItem('token');\r\n  return api.get<BreachAlert[]>('/api/v1/breach/alerts', {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const resolveBreachAlert = (alertId: string) => {\r\n  const token = localStorage.getItem('token');\r\n  return api.put<BreachAlert>(`/api/v1/breach/alerts/${alertId}/resolve`, {}, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,OAAO,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC9BC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,uBAAuB,GAAGA,CAAA,KAAM;EAC3C,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOV,GAAG,CAACuB,IAAI,CAAgB,gCAAgC,EAAE,CAAC,CAAC,EAAE;IACnEpB,OAAO,EAAE;MACPQ,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMgB,mBAAmB,GAAGA,CAAA,KAAM;EACvC,MAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOV,GAAG,CAACuB,IAAI,CAAgB,4BAA4B,EAAE,CAAC,CAAC,EAAE;IAC/DpB,OAAO,EAAE;MACPQ,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMiB,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOV,GAAG,CAAC0B,GAAG,CAAgB,uBAAuB,EAAE;IACrDvB,OAAO,EAAE;MACPQ,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMmB,kBAAkB,GAAIC,OAAe,IAAK;EACrD,MAAMpB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAOV,GAAG,CAAC6B,GAAG,CAAc,yBAAyBD,OAAO,UAAU,EAAE,CAAC,CAAC,EAAE;IAC1EzB,OAAO,EAAE;MACPQ,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}